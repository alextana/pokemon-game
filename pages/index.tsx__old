import Head from 'next/head'
import Image from 'next/image'
import { getRandomPokemon } from 'utils/getRandomPokemon'
import { useState } from 'react'

import { trpc } from 'utils/trpc'

export default function Home() {
  const [id, updateId] = useState(() => getRandomPokemon())
  const pokemon = id

  const pokemonToDisplay = trpc.useQuery(["get-pokemon-by-id", { id: pokemon }])
  const user = trpc.useQuery(["get-user-by-id", { id: 2 }])
  const capturedPokemon = trpc.useMutation(["capture-pokemon"])

  console.log(user.data)

  function capturePokemon (pokemon: number) {
    console.log('mm', pokemon)
    if (!user) {
      return
    }
    capturedPokemon.mutate({ userId: 2, pokemonId: pokemon })
    console.log(capturedPokemon.data)
  }

  if (pokemonToDisplay.isLoading) return null

  if (!pokemonToDisplay.data) return

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div suppressHydrationWarning className="container mx-auto">
        We are going to be capturing number: {pokemon}
        <Image src={pokemonToDisplay?.data?.sprites.front_default} width="400" height="400" alt={pokemonToDisplay?.data.name || 'image'} />

        <button onClick={() => capturePokemon(pokemon)}>Capture pokemon!</button>
      </div>
    </div>
  )
}